{"version":3,"sources":["logo.svg","data/dishes.jsx","components/Step1.jsx","components/Step2.jsx","components/Step3.jsx","components/Review.jsx","components/OrderForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["data","Step1Form","props","displayItems","items","map","item","MenuItem","value","orderInfor","meal","numberOfPeople","Fragment","Grid","container","spacing","xs","sm","FormControl","style","margin","className","InputLabel","Select","name","required","defaultValue","onChange","event","handleChange","type","inputProps","min","max","Step2Form","restaurants","mealSelected","restaurantsTemp","dishes","availableMeals","indexOf","push","restaurant","console","log","getRestaurantsByMeal","Step3Form","useState","dish","setDish","count","setCount","target","listDishes","restaurantSelected","newDish","getDish","position","Button","marginTop","marginLeft","bottom","left","variant","color","onClick","some","splice","addDishes","Table","TableHead","TableRow","TableCell","width","TableBody","row","component","scope","ReviewForm","whiteSpace","key","OrderForm","steps","activeStep","setActiveStep","setMeal","setNumberOfPeople","setRestaurant","setDishes","setError","checkData","result","newdishes","CssBaseline","AppBar","Toolbar","Typography","noWrap","Paper","align","Stepper","label","Step","StepLabel","length","gutterBottom","step","Step1","Step2","Step3","Review","Error","getStepContent","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b64666.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const data = {\r\n    \"dishes\": [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"Chicken Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"name\": \"Ham Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"name\": \"Cheese Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"name\": \"Fries\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        \"name\": \"Egg Muffin\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"Burrito\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"Tacos\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 8,\r\n        \"name\": \"Quesadilla\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 9,\r\n        \"name\": \"Steak\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 10,\r\n        \"name\": \"Yakitori\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 11,\r\n        \"name\": \"Nankotsu\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 12,\r\n        \"name\": \"Piman\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 13,\r\n        \"name\": \"Vegan Bento\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\"]\r\n      },\r\n      {\r\n        \"id\": 14,\r\n        \"name\": \"Coleslaw Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 15,\r\n        \"name\": \"Grilled Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 16,\r\n        \"name\": \"Veg. Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 17,\r\n        \"name\": \"Fruit Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 18,\r\n        \"name\": \"Corn Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 19,\r\n        \"name\": \"Tomato Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 20,\r\n        \"name\": \"Minestrone Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 21,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 22,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 23,\r\n        \"name\": \"Hawaiian Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 24,\r\n        \"name\": \"Seafood Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 25,\r\n        \"name\": \"Deep Dish Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 26,\r\n        \"name\": \"Chow Mein\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 27,\r\n        \"name\": \"Mapo Tofu\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 28,\r\n        \"name\": \"Kung Pao\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 29,\r\n        \"name\": \"Wontons\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 30,\r\n        \"name\": \"Garlic Bread\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 31,\r\n        \"name\": \"Ravioli\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 32,\r\n        \"name\": \"Rigatoni Spaghetti\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 33,\r\n        \"name\": \"Fettucine Pasta\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      }\r\n    ]\r\n  }\r\n  ","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { data } from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputLabel } from '@material-ui/core';\r\n\r\n\r\nfunction Step1Form(props) {\r\n\r\n    function displayItems(items) {\r\n        return (\r\n            items.map(item => (\r\n                <MenuItem\r\n                    key={item}\r\n                    value={item}\r\n                >{item}</MenuItem>\r\n            ))\r\n        )\r\n    }\r\n\r\n    const meals = [\"breakfast\", \"lunch\", \"dinner\"];\r\n    const peoples = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    const { meal, numberOfPeople } = props.orderInfor;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Select A Meal</span></InputLabel>\r\n                        <Select\r\n                            name=\"meal\"\r\n                            required\r\n                            defaultValue={meal ? meal : \"\"}\r\n                            onChange={(event) => props.handleChange(event)}\r\n                        >\r\n                            {displayItems(meals)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Select A Number Of People</span></InputLabel>\r\n                        <Select\r\n                            name=\"numberOfPeople\"\r\n                            type=\"number\"\r\n                            defaultValue={numberOfPeople ? numberOfPeople : \"\"}\r\n                            onChange={(event) => props.handleChange(event)}\r\n                            inputProps={{ min: 1, max: 10 }}\r\n                        >\r\n                            {displayItems(peoples)}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Step1Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { data } from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputLabel } from '@material-ui/core';\r\n\r\n\r\nfunction Step2Form(props) {\r\n\r\n  function displayItems(items) {\r\n    return (\r\n      items.map(item => (\r\n        <MenuItem\r\n          key={item}\r\n          value={item}\r\n        >{item}</MenuItem>\r\n      )))\r\n  }\r\n\r\n\r\n  function getRestaurantsByMeal() {\r\n    var mealSelected = props.orderInfor.meal;\r\n    var restaurantsTemp = [];\r\n    data.dishes.map((value) => {\r\n      var index1 = value.availableMeals.indexOf(mealSelected);\r\n      if (index1 !== -1) {\r\n        restaurantsTemp.push(value.restaurant);\r\n      }\r\n    });\r\n    console.log(\"effect\");\r\n    var restaurant = [];\r\n    restaurantsTemp.map((value) => {\r\n      var index2 = restaurant.indexOf(value);\r\n      if (index2 === -1) {\r\n        restaurant.push(value);\r\n      }\r\n    });\r\n    return restaurant;\r\n  };\r\n  const restaurants = getRestaurantsByMeal();\r\n  const { restaurant, numberOfPeople } = props.orderInfor;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n            <InputLabel><span >Please Select A Restaurant</span></InputLabel>\r\n            <Select\r\n              name=\"restaurant\"\r\n              defaultValue={restaurant ? restaurant : \"\"}\r\n              onChange={(event) => props.handleChange(event)}\r\n            >\r\n              {displayItems(restaurants)}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Step2Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { data } from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableRow,\r\n} from \"@material-ui/core\";\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Step3Form(props) {\r\n    \r\n    const [dish, setDish] = useState('');\r\n    const [count, setCount] = useState(1);\r\n    const [dishes, setDishes] = useState([]);\r\n\r\n\r\n    function displayItems(items) {\r\n        return (\r\n\r\n            items.map(item => (\r\n                <MenuItem\r\n                    key={item}\r\n                    value={item}\r\n                >{item}</MenuItem>\r\n            ))\r\n        )\r\n    }\r\n\r\n    function getDish() {\r\n        var mealSelected = props.orderInfor.meal;\r\n        var restaurantSelected = props.orderInfor.restaurant;\r\n        var restaurantsTemp = [];\r\n        data.dishes.map((value) => {\r\n            if (value.restaurant === restaurantSelected) restaurantsTemp.push(value);\r\n        });\r\n        var newDish = [];\r\n        restaurantsTemp.map((value) => {\r\n            var index = value.availableMeals.indexOf(mealSelected);\r\n            if (index !== -1) {\r\n                newDish.push(value.name);\r\n            }\r\n        });\r\n        return newDish;\r\n    };\r\n\r\n    function handleChange(event, type) {\r\n        if (type === \"dish\") {\r\n            // this.setState(\r\n            //     {\r\n            //         dish: event.target.value,\r\n            //     },\r\n            //     function () {\r\n            //         console.log(this.state)\r\n            //     }\r\n            // );\r\n            setDish(event.target.value);\r\n        }\r\n        if (type === \"count\") {\r\n            // this.setState(\r\n            //     {\r\n            //         count: event.target.value,\r\n            //     }\r\n            // );\r\n            setCount(event.target.value);\r\n        }\r\n    }\r\n\r\n    function addDishes() {\r\n        // var { dishes, dish, count } = this.state;\r\n        if (dishes == null) {\r\n            dishes = []\r\n        }\r\n        if (dish && count) {\r\n            const found = dishes.some(item => item.dish === dish);\r\n            if (!found) {\r\n                dishes.push({ dish, count });\r\n            }\r\n            else {\r\n                dishes.splice(dishes.indexOf(dish), 1);\r\n                dishes.push({ dish, count });\r\n            }\r\n            // setState({ dishes: dishes });\r\n            setDish(dishes)\r\n            props.addDishes(dishes);\r\n        }\r\n    }\r\n\r\n    const { numberOfPeople } = props.orderInfor;\r\n    const listDishes = getDish();\r\n    const numberSelects = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3} style={{ position: \"relative\" }}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Select A Dish</span></InputLabel>\r\n                        <Select\r\n                            name=\"dish\"\r\n                            onChange={(event) => handleChange(event, \"dish\")}\r\n                        >\r\n                            {displayItems(listDishes)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Enter No. Of Servings</span></InputLabel>\r\n                        <Select\r\n                            name=\"count\"\r\n                            defaultValue={1}\r\n                            onChange={(event) => handleChange(event, \"count\")}\r\n                        >\r\n                            {displayItems(numberSelects)}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n\r\n                    <Button\r\n                        style={{ marginTop: \"0px\", marginLeft: \"0px\", position: \"absolute\", bottom: \"-10px\", left: \"2rem\" }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={addDishes}\r\n                    > Add\r\n                        </Button>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                    <Table\r\n                        className=\"crud-table\"\r\n                        style={{ margin: \"12px\" }}\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: \"50%\" }}>Dishes </TableCell>\r\n                                <TableCell style={{ width: \"50%\" }}>Number Of Servings</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {dishes.map((row) => (\r\n                                <TableRow key={row.dish}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.dish}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.count}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Step3Form;","import React from 'react';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\n\r\n\r\nfunction ReviewForm(props) {\r\n    function displayDishes(dishes) {\r\n        return (\r\n            dishes.map((dish, key) => (\r\n                <TableRow key={key}>\r\n                    <TableCell>{dish.dish}</TableCell>\r\n                    <TableCell>{dish.count}</TableCell>\r\n                </TableRow>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const { orderInfor } = props;\r\n    return (\r\n        <div style={{ marginLeft: \"300px\" }}>\r\n            <p>Meal : {orderInfor.meal}</p>\r\n            <p>Number of People : {orderInfor.numberOfPeople}</p>\r\n            <p>Restaurant : {orderInfor.restaurant}</p>\r\n            <p>Dishes : </p>\r\n            <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width: \"300px\", marginLeft: \"100px\" }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Dish</TableCell>\r\n                        <TableCell>Number</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {displayDishes(orderInfor.dishes)}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReviewForm;","\r\nimport React,{ useState} from 'react';\r\nimport './../App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { data } from \"../data/dishes\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Step1Form from './Step1';\r\nimport Step2Form from './Step2';\r\nimport Step3Form from './Step3';\r\nimport ReviewForm from './Review';\r\n\r\n\r\nfunction OrderForm(props) {\r\n    const [steps, setSteps] = useState(['Step 1', 'Step 2', 'Step 3', 'Review']);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [meal, setMeal] = useState('');\r\n    const [numberOfPeople, setNumberOfPeople] = useState(0);\r\n    const [restaurant, setRestaurant] = useState('');\r\n    const [dishes, setDishes] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    var orderInfor = {\r\n        meal,\r\n        numberOfPeople,\r\n        restaurant,\r\n        dishes\r\n    }\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return <Step1Form orderInfor={orderInfor} handleChange={handleChange} />;\r\n            case 1:\r\n                return <Step2Form orderInfor={orderInfor} handleChange={handleChange} />;\r\n            case 2:\r\n                return <Step3Form orderInfor={orderInfor} addDishes={addDishes} />;\r\n            case 3:\r\n                return <ReviewForm orderInfor={orderInfor} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        console.log(event.target.value);\r\n        var error = \"\";\r\n        if (event.target.name === \"meal\") {\r\n           setMeal( event.target.value);\r\n        }\r\n        if (event.target.name === \"numberOfPeople\") {\r\n            setNumberOfPeople( event.target.value);\r\n            // if(orderInfor.numberOfPeople < 1 ){\r\n            //     error = \"Number of People is invalid!\";\r\n            // }\r\n            // if(orderInfor.numberOfPeople > 10 ){\r\n            //     error = \"Number of People must less than 11!\";\r\n\r\n            // }\r\n\r\n        }\r\n        if (event.target.name === \"restaurant\") {\r\n            // orderInfor.restaurant = event.target.value;\r\n            setRestaurant( event.target.value )\r\n\r\n        }\r\n        setError(error);\r\n    }\r\n\r\n    function handleNext() {\r\n\r\n        if (activeStep < 4) {\r\n            if (checkData() === 1) {\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n            else if (checkData() === 0) {\r\n                alert('Fill all the field!');\r\n            }\r\n            else if (checkData() === 2) {\r\n                alert('Not enough dishes!');\r\n            }\r\n        }\r\n    };\r\n\r\n    function handleBack() {\r\n        if (activeStep >= 1) {\r\n            setActiveStep(activeStep - 1);\r\n        }\r\n    };\r\n\r\n    function checkData() {\r\n        var result = 1;\r\n        if (activeStep === 0) {\r\n            if (!numberOfPeople || !meal) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                result = 1;\r\n            }\r\n        }\r\n        else if (activeStep === 1) {\r\n            if (!restaurant) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                result = 1;\r\n            }\r\n        }\r\n        else if (activeStep === 2) {\r\n            if (!dishes) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                var value = null\r\n                dishes.map(dish => {\r\n                    value = value + dish.count\r\n                })\r\n                if (value < numberOfPeople) {\r\n                    result = 2\r\n                }\r\n                else {\r\n                    result = 1;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function addDishes(newdishes) {\r\n        setDishes(newdishes);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar color=\"default\" className=\"appBar\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Fabi Test\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className=\"layout\">\r\n                <Paper className=\"paper\">\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Order\r\n                </Typography>\r\n                    <Stepper activeStep={activeStep} className=\"stepper\">\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order.\r\n                        </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                    send you an update when your order has shipped.\r\n                        </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                                <React.Fragment>\r\n                                    {getStepContent(activeStep)}\r\n                                    <div className=\"buttons\" >\r\n                                        {activeStep !== 0 && (\r\n                                            <Button onClick={handleBack} className=\"button\">\r\n                                                Back\r\n                                            </Button>\r\n                                        )}\r\n                                        <Button\r\n\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={handleNext}\r\n                                            className=\"button\"\r\n                                        >\r\n                                            {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OrderForm;","import logo from './logo.svg';\nimport OrderForm from './components/OrderForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <OrderForm />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}